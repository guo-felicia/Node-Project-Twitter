{"ast":null,"code":"var _jsxFileName = \"/Users/tongfeiguo/2022/spring/webdev/web-dev/src/components/Labs/ConditionalOutput/ConditionalOutputInline.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConditionalOutputInline = () => {\n  _s();\n\n  const loggedIn = false;\n  const [i, j] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [i && /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => j(false),\n      children: \"K\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 17\n    }, this), !i && /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => j(true),\n      children: \"L\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ConditionalOutputInline, \"c7kPDbXVneLluPeiajOL8tpytHU=\");\n\n_c = ConditionalOutputInline;\nexport default ConditionalOutputInline;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConditionalOutputInline\");","map":{"version":3,"sources":["/Users/tongfeiguo/2022/spring/webdev/web-dev/src/components/Labs/ConditionalOutput/ConditionalOutputInline.js"],"names":["React","useState","ConditionalOutputInline","loggedIn","i","j"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AACA,MAAMC,uBAAuB,GAAG,MAAM;AAAA;;AAClC,QAAMC,QAAQ,GAAG,KAAjB;AACA,QAAM,CAACC,CAAD,EAAIC,CAAJ,IAASJ,QAAQ,CAAC,IAAD,CAAvB;AACA,sBAAO;AAAA,eACAG,CAAC,iBAAI;AAAM,MAAA,OAAO,EAAE,MAAMC,CAAC,CAAC,KAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,EAED,CAACD,CAAD,iBAAM;AAAM,MAAA,OAAO,EAAE,MAAMC,CAAC,CAAC,IAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,CAPD;;GAAMH,uB;;KAAAA,uB;AAQN,eAAeA,uBAAf","sourcesContent":["import React, {useState} from \"react\";\nconst ConditionalOutputInline = () => {\n    const loggedIn = false;\n    const [i, j] = useState(true)\n    return(<div>\n        {  i && <span onClick={() => j(false)}>K</span>}\n        { !i && <span onClick={() => j(true) }>L</span>}\n    </div>);\n};\nexport default ConditionalOutputInline;\n"]},"metadata":{},"sourceType":"module"}