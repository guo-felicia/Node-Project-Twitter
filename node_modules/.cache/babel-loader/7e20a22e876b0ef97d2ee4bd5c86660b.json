{"ast":null,"code":"/*\nconst data = [\n    {\n        _id: \"123\",\n        do: \"Accelerate the world's transition to sustainable energy\",\n        done: false\n    },\n    {\n        _id: \"234\",\n        do: \"Reduce space transportation costs to become a spacefaring civilization\",\n        done: false\n    },\n];\n\nconst todos = (state = data, action) => {\n    switch (action.type) {\n        case 'update-todo':\n            const newTodos = state.map(todo => {\n                const newTodo = todo._id === action.todo._id ? action.todo : todo;\n                return newTodo;\n            });\n            return newTodos;\n        case 'delete-todo':\n            return state.filter(todo => todo !== action.todo);\n        case 'create-todo':\n            const newTodo = {\n                ...action.todo,\n                _id: (new Date()).getDate() + \"\"\n            };\n            return [\n                ...state,\n                newTodo\n            ]\n        default:\n            return state;\n    }\n}\n\n\nexport default todos;\n*/\nconst data = [{\n  _id: \"123\",\n  do: \"Accelerate the world's transition to sustainable energy\",\n  done: false\n}, {\n  _id: \"234\",\n  do: \"Reduce space transportation costs to become a spacefaring civilization\",\n  done: false\n}];\n\nconst todos = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : data;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    //changed for checkbox function\n    case 'update-todo':\n      const newTodos = state.map(todo => {\n        const newTodo = todo._id === action.todo._id ? action.todo : todo;\n        return newTodo;\n      });\n      return newTodos;\n\n    case 'delete-todo':\n      return state.filter(todo => todo !== action.todo);\n\n    case 'create-todo':\n      // add new constant for checkbox function\n      const newTodo = { ...action.todo,\n        _id: new Date().getDate() + \"\"\n      };\n      return [...state, //changed for checkbox function\n      newTodo];\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;","map":{"version":3,"sources":["/Users/tongfeiguo/2022/spring/webdev/web-dev/src/components/Labs/ReduxExamples/reducers/todos.js"],"names":["data","_id","do","done","todos","state","action","type","newTodos","map","todo","newTodo","filter","Date","getDate"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,IAAI,GAAG,CACT;AACIC,EAAAA,GAAG,EAAE,KADT;AAEIC,EAAAA,EAAE,EAAE,yDAFR;AAGIC,EAAAA,IAAI,EAAE;AAHV,CADS,EAMT;AACIF,EAAAA,GAAG,EAAE,KADT;AAEIC,EAAAA,EAAE,EAAE,wEAFR;AAGIC,EAAAA,IAAI,EAAE;AAHV,CANS,CAAb;;AAaA,MAAMC,KAAK,GAAG,YAA0B;AAAA,MAAzBC,KAAyB,uEAAjBL,IAAiB;AAAA,MAAXM,MAAW;;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAK,aAAL;AACI,YAAMC,QAAQ,GAAGH,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAI;AAC/B,cAAMC,OAAO,GAAGD,IAAI,CAACT,GAAL,KAAaK,MAAM,CAACI,IAAP,CAAYT,GAAzB,GAA+BK,MAAM,CAACI,IAAtC,GAA6CA,IAA7D;AACA,eAAOC,OAAP;AACH,OAHgB,CAAjB;AAIA,aAAOH,QAAP;;AAEJ,SAAK,aAAL;AACI,aAAOH,KAAK,CAACO,MAAN,CAAaF,IAAI,IAAIA,IAAI,KAAKJ,MAAM,CAACI,IAArC,CAAP;;AAEJ,SAAK,aAAL;AACI;AACA,YAAMC,OAAO,GAAG,EACZ,GAAGL,MAAM,CAACI,IADE;AAEZT,QAAAA,GAAG,EAAG,IAAIY,IAAJ,EAAD,CAAaC,OAAb,KAAyB;AAFlB,OAAhB;AAIA,aAAO,CACH,GAAGT,KADA,EAEH;AACAM,MAAAA,OAHG,CAAP;;AAKJ;AACI,aAAON,KAAP;AAxBR;AA0BH,CA3BD;;AA8BA,eAAeD,KAAf","sourcesContent":["/*\nconst data = [\n    {\n        _id: \"123\",\n        do: \"Accelerate the world's transition to sustainable energy\",\n        done: false\n    },\n    {\n        _id: \"234\",\n        do: \"Reduce space transportation costs to become a spacefaring civilization\",\n        done: false\n    },\n];\n\nconst todos = (state = data, action) => {\n    switch (action.type) {\n        case 'update-todo':\n            const newTodos = state.map(todo => {\n                const newTodo = todo._id === action.todo._id ? action.todo : todo;\n                return newTodo;\n            });\n            return newTodos;\n        case 'delete-todo':\n            return state.filter(todo => todo !== action.todo);\n        case 'create-todo':\n            const newTodo = {\n                ...action.todo,\n                _id: (new Date()).getDate() + \"\"\n            };\n            return [\n                ...state,\n                newTodo\n            ]\n        default:\n            return state;\n    }\n}\n\n\nexport default todos;\n*/\n\nconst data = [\n    {\n        _id: \"123\",\n        do: \"Accelerate the world's transition to sustainable energy\",\n        done: false\n    },\n    {\n        _id: \"234\",\n        do: \"Reduce space transportation costs to become a spacefaring civilization\",\n        done: false\n    },\n];\n\nconst todos = (state = data, action) => {\n    switch (action.type) {\n        //changed for checkbox function\n        case 'update-todo':\n            const newTodos = state.map(todo => {\n                const newTodo = todo._id === action.todo._id ? action.todo : todo;\n                return newTodo;\n            });\n            return newTodos;\n    \n        case 'delete-todo':\n            return state.filter(todo => todo !== action.todo);\n        \n        case 'create-todo':\n            // add new constant for checkbox function\n            const newTodo = {\n                ...action.todo,\n                _id: (new Date()).getDate() + \"\"\n            };\n            return [\n                ...state,\n                //changed for checkbox function\n                newTodo\n            ]\n        default:\n            return state;\n    }\n}\n\n\nexport default todos;\n"]},"metadata":{},"sourceType":"module"}