{"ast":null,"code":"var _jsxFileName = \"/Users/tongfeiguo/2022/spring/webdev/web-dev/src/components/Labs/ReduxExamples/components/todos.js\",\n    _s = $RefreshSig$();\n\n// import useState to work with local state\nimport React, { useState } from \"react\"; // import the hook\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  _id: \"123\",\n  do: \"Accelerate the world's transition to sustainable energy\",\n  done: false\n}, {\n  _id: \"234\",\n  do: \"Reduce space transportation costs to become a spacefaring civilization\",\n  done: false\n}];\n\nconst Todos = () => {\n  _s();\n\n  const todos = useSelector(state => state.todos); // create todos local state variable initialized + add done property\n\n  const [todo, setTodo] = useState({\n    do: '',\n    done: false\n  }); // create a dispatch\n\n  const dispatch = useDispatch(); // handle checkbox click\n\n  const updateTodoClickHandler = todo => {\n    const action = {\n      type: 'update-todo',\n      todo\n    };\n    dispatch(action);\n  }; // handle create click event\n\n\n  const createTodoClickHandler = () => {\n    // create action object\n    const action = {\n      type: 'create-todo',\n      // required action type\n      todo\n    };\n    dispatch(action); // send action to reducers\n  }; // delete todos event handler accepts todo\n\n\n  const deleteTodoClickHandler = todo => {\n    const action = {\n      type: 'delete-todo',\n      todo\n    };\n    dispatch(action);\n  }; // handle keystroke changes in input field\n\n\n  const todoChangeHandler = event => {\n    // get data from input field\n    const doValue = event.target.value; // create new todos object instance\n\n    const newTodo = {\n      do: doValue // setting the todos do property\n\n    };\n    setTodo(newTodo); // change local state todos variable\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list-group\",\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        checked: todo.done,\n        onChange: event => updateTodoClickHandler({ ...todo,\n          done: event.target.checked\n        }),\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: todoChangeHandler,\n        value: todo.do,\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createTodoClickHandler,\n        className: \"btn btn-primary\",\n        children: \"Create New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTodoClickHandler(todo),\n        className: \"btn btn-danger float-end\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todos, \"lQPkXYq0HDkHAykpMxmm9w9YMNM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/Users/tongfeiguo/2022/spring/webdev/web-dev/src/components/Labs/ReduxExamples/components/todos.js"],"names":["React","useState","useDispatch","useSelector","data","_id","do","done","Todos","todos","state","todo","setTodo","dispatch","updateTodoClickHandler","action","type","createTodoClickHandler","deleteTodoClickHandler","todoChangeHandler","event","doValue","target","value","newTodo","checked"],"mappings":"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","sourcesContent":["// import useState to work with local state\nimport React, {useState} from \"react\";\n// import the hook\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst data = [\n    {\n        _id: \"123\",\n        do: \"Accelerate the world's transition to sustainable energy\",\n        done: false\n    },\n    {\n        _id: \"234\",\n        do: \"Reduce space transportation costs to become a spacefaring civilization\",\n        done: false\n    },\n];\n\n\n\nconst Todos = () => {\n    const todos = useSelector(state => state.todos);\n    // create todos local state variable initialized + add done property\n    const [todo, setTodo] = useState({do: '', done: false});\n    // create a dispatch\n    const dispatch = useDispatch();\n    // handle checkbox click\n    const updateTodoClickHandler = (todo) => {\n        const action = {\n            type: 'update-todo',\n            todo\n        };\n        dispatch(action);\n    }\n    \n    // handle create click event\n    const createTodoClickHandler = () => {\n        // create action object\n        const action = {\n            type: 'create-todo', // required action type\n            todo\n        };\n        dispatch(action); // send action to reducers\n    }\n    // delete todos event handler accepts todo\n    const deleteTodoClickHandler = (todo) => {\n        const action = {\n            type: 'delete-todo',\n            todo\n        };\n        dispatch(action);\n    }\n    \n    // handle keystroke changes in input field\n    const todoChangeHandler = (event) => {\n        // get data from input field\n        const doValue = event.target.value;\n        // create new todos object instance\n        const newTodo = {\n            do: doValue // setting the todos do property\n        };\n        setTodo(newTodo); // change local state todos variable\n    }\n    return (\n        <ul className=\"list-group\">\n            {/*add a new line item at the top*/}\n            <li className=\"list-group-item\">\n                <input checked={todo.done}\n                       onChange={(event) =>\n                           updateTodoClickHandler(\n                               {...todo,\n                                   done: event.target.checked})}\n                       type=\"checkbox\"/>\n    \n                <input\n                    onChange={todoChangeHandler}\n                    value={todo.do}\n                    className=\"form-control\"/>\n                {/*create button notifies event handler when*/}\n                <button onClick={createTodoClickHandler}\n                        className=\"btn btn-primary\">\n                    Create New Todo\n                </button>\n                <button onClick={() =>\n                    deleteTodoClickHandler(todo)}\n                        className=\"btn btn-danger float-end\">\n                    Delete\n                </button>\n\n            </li>\n        </ul>\n    );\n};\nexport default Todos;\n\n"]},"metadata":{},"sourceType":"module"}