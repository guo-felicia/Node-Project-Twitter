{"ast":null,"code":"// import useState to work with local state\nimport React, { useState } from \"react\"; // import the hook\n\nimport { useDispatch, useSelector } from \"react-redux\";\nconst data = [{\n  _id: \"123\",\n  do: \"Accelerate the world's transition to sustainable energy\",\n  done: false\n}, {\n  _id: \"234\",\n  do: \"Reduce space transportation costs to become a spacefaring civilization\",\n  done: false\n}];\n\nconst Todos = () => {\n  return data;\n}; // const Todos = () => {\n//     const todos = useSelector(state => state.todos);\n//     // create todos local state variable initialized + add done property\n//     const [todo, setTodo] = useState({do: '', done: false});\n//     // create a dispatch\n//     const dispatch = useDispatch();\n//     // handle checkbox click\n//     const updateTodoClickHandler = (todo) => {\n//         const action = {\n//             type: 'update-todo',\n//             todo\n//         };\n//         dispatch(action);\n//     }\n//\n//     // handle create click event\n//     const createTodoClickHandler = () => {\n//         // create action object\n//         const action = {\n//             type: 'create-todo', // required action type\n//             todo\n//         };\n//         dispatch(action); // send action to reducers\n//     }\n//     // delete todos event handler accepts todo\n//     const deleteTodoClickHandler = (todo) => {\n//         const action = {\n//             type: 'delete-todo',\n//             todo\n//         };\n//         dispatch(action);\n//     }\n//\n//     // handle keystroke changes in input field\n//     const todoChangeHandler = (event) => {\n//         // get data from input field\n//         const doValue = event.target.value;\n//         // create new todos object instance\n//         const newTodo = {\n//             do: doValue // setting the todos do property\n//         };\n//         setTodo(newTodo); // change local state todos variable\n//     }\n//     return (\n//         <ul className=\"list-group\">\n//             {/*add a new line item at the top*/}\n//             <li className=\"list-group-item\">\n//                 <input checked={todo.done}\n//                        onChange={(event) =>\n//                            updateTodoClickHandler(\n//                                {...todo,\n//                                    done: event.target.checked})}\n//                        type=\"checkbox\"/>\n//\n//                 <input\n//                     onChange={todoChangeHandler}\n//                     value={todo.do}\n//                     className=\"form-control\"/>\n//                 {/*create button notifies event handler when*/}\n//                 <button onClick={createTodoClickHandler}\n//                         className=\"btn btn-primary\">\n//                     Create New Todo\n//                 </button>\n//                 <button onClick={() =>\n//                     deleteTodoClickHandler(todo)}\n//                         className=\"btn btn-danger float-end\">\n//                     Delete\n//                 </button>\n//\n//             </li>\n//         </ul>\n//     );\n// };\n\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/Users/tongfeiguo/2022/spring/webdev/web-dev/src/components/Labs/ReduxExamples/components/todos.js"],"names":["React","useState","useDispatch","useSelector","data","_id","do","done","Todos"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CACA;;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,MAAMC,IAAI,GAAG,CACT;AACIC,EAAAA,GAAG,EAAE,KADT;AAEIC,EAAAA,EAAE,EAAE,yDAFR;AAGIC,EAAAA,IAAI,EAAE;AAHV,CADS,EAMT;AACIF,EAAAA,GAAG,EAAE,KADT;AAEIC,EAAAA,EAAE,EAAE,wEAFR;AAGIC,EAAAA,IAAI,EAAE;AAHV,CANS,CAAb;;AAaA,MAAMC,KAAK,GAAG,MAAM;AAChB,SAAOJ,IAAP;AACH,CAFD,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KA7EMI,K;AA8EN,eAAeA,KAAf","sourcesContent":["// import useState to work with local state\nimport React, {useState} from \"react\";\n// import the hook\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst data = [\n    {\n        _id: \"123\",\n        do: \"Accelerate the world's transition to sustainable energy\",\n        done: false\n    },\n    {\n        _id: \"234\",\n        do: \"Reduce space transportation costs to become a spacefaring civilization\",\n        done: false\n    },\n];\n\nconst Todos = () => {\n    return data;\n}\n\n\n// const Todos = () => {\n//     const todos = useSelector(state => state.todos);\n//     // create todos local state variable initialized + add done property\n//     const [todo, setTodo] = useState({do: '', done: false});\n//     // create a dispatch\n//     const dispatch = useDispatch();\n//     // handle checkbox click\n//     const updateTodoClickHandler = (todo) => {\n//         const action = {\n//             type: 'update-todo',\n//             todo\n//         };\n//         dispatch(action);\n//     }\n//\n//     // handle create click event\n//     const createTodoClickHandler = () => {\n//         // create action object\n//         const action = {\n//             type: 'create-todo', // required action type\n//             todo\n//         };\n//         dispatch(action); // send action to reducers\n//     }\n//     // delete todos event handler accepts todo\n//     const deleteTodoClickHandler = (todo) => {\n//         const action = {\n//             type: 'delete-todo',\n//             todo\n//         };\n//         dispatch(action);\n//     }\n//\n//     // handle keystroke changes in input field\n//     const todoChangeHandler = (event) => {\n//         // get data from input field\n//         const doValue = event.target.value;\n//         // create new todos object instance\n//         const newTodo = {\n//             do: doValue // setting the todos do property\n//         };\n//         setTodo(newTodo); // change local state todos variable\n//     }\n//     return (\n//         <ul className=\"list-group\">\n//             {/*add a new line item at the top*/}\n//             <li className=\"list-group-item\">\n//                 <input checked={todo.done}\n//                        onChange={(event) =>\n//                            updateTodoClickHandler(\n//                                {...todo,\n//                                    done: event.target.checked})}\n//                        type=\"checkbox\"/>\n//\n//                 <input\n//                     onChange={todoChangeHandler}\n//                     value={todo.do}\n//                     className=\"form-control\"/>\n//                 {/*create button notifies event handler when*/}\n//                 <button onClick={createTodoClickHandler}\n//                         className=\"btn btn-primary\">\n//                     Create New Todo\n//                 </button>\n//                 <button onClick={() =>\n//                     deleteTodoClickHandler(todo)}\n//                         className=\"btn btn-danger float-end\">\n//                     Delete\n//                 </button>\n//\n//             </li>\n//         </ul>\n//     );\n// };\nexport default Todos;\n\n"]},"metadata":{},"sourceType":"module"}